This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-09-24T01:16:21.946Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
assets/
  icons/
    icon-1.svg
    icon-2.svg
    icon-3.svg
    Icon-star.svg
css/
  styles.css
  styles.css.map
index.html
index.js
package.json
styles.scss
watchlist.html
watchlist.js

================================================================
Repository Files
================================================================

================
File: assets/icons/icon-1.svg
================
<svg width="108" height="108" viewBox="0 0 108 108" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_d_39_115)">
<rect width="100" height="100" transform="translate(4)" fill="#1C1C1C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M54 75C67.8071 75 79 63.8071 79 50C79 36.1929 67.8071 25 54 25C40.1929 25 29 36.1929 29 50C29 63.8071 40.1929 75 54 75ZM57.125 40.625C57.125 38.8991 55.7259 37.5 54 37.5C52.2741 37.5 50.875 38.8991 50.875 40.625V46.875H44.625C42.8991 46.875 41.5 48.2741 41.5 50C41.5 51.7259 42.8991 53.125 44.625 53.125H50.875V59.375C50.875 61.1009 52.2741 62.5 54 62.5C55.7259 62.5 57.125 61.1009 57.125 59.375V53.125H63.375C65.1009 53.125 66.5 51.7259 66.5 50C66.5 48.2741 65.1009 46.875 63.375 46.875H57.125V40.625Z" fill="white"/>
</g>
<defs>
<filter id="filter0_d_39_115" x="0" y="0" width="108" height="108" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_39_115"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_39_115" result="shape"/>
</filter>
</defs>
</svg>

================
File: assets/icons/icon-2.svg
================
<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" fill="#1C1C1C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M50 75C63.8071 75 75 63.8071 75 50C75 36.1929 63.8071 25 50 25C36.1929 25 25 36.1929 25 50C25 63.8071 36.1929 75 50 75ZM40.625 46.875C38.8991 46.875 37.5 48.2741 37.5 50C37.5 51.7259 38.8991 53.125 40.625 53.125H59.375C61.1009 53.125 62.5 51.7259 62.5 50C62.5 48.2741 61.1009 46.875 59.375 46.875H40.625Z" fill="white"/>
</svg>

================
File: assets/icons/icon-3.svg
================
<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" fill="#1C1C1C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M43.75 31.25C36.8464 31.25 31.25 36.8464 31.25 43.75C31.25 50.6536 36.8464 56.25 43.75 56.25C50.6536 56.25 56.25 50.6536 56.25 43.75C56.25 36.8464 50.6536 31.25 43.75 31.25ZM25 43.75C25 33.3947 33.3947 25 43.75 25C54.1053 25 62.5 33.3947 62.5 43.75C62.5 47.7995 61.2163 51.5491 59.0336 54.6142L74.0847 69.6653C75.3051 70.8857 75.3051 72.8643 74.0847 74.0847C72.8643 75.3051 70.8857 75.3051 69.6653 74.0847L54.6142 59.0336C51.5491 61.2163 47.7995 62.5 43.75 62.5C33.3947 62.5 25 54.1053 25 43.75Z" fill="white"/>
</svg>

================
File: assets/icons/Icon-star.svg
================
<svg width="13" height="12" viewBox="0 0 13 12" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5.78671 1.19529C6.01122 0.504306 6.98878 0.504305 7.21329 1.19529L8.01547 3.66413C8.11588 3.97315 8.40384 4.18237 8.72876 4.18237H11.3247C12.0512 4.18237 12.3533 5.11208 11.7655 5.53913L9.66537 7.06497C9.40251 7.25595 9.29251 7.59447 9.39292 7.90349L10.1951 10.3723C10.4196 11.0633 9.62875 11.6379 9.04097 11.2109L6.94084 9.68503C6.67797 9.49405 6.32203 9.49405 6.05916 9.68503L3.95903 11.2109C3.37125 11.6379 2.58039 11.0633 2.8049 10.3723L3.60708 7.90349C3.70749 7.59448 3.59749 7.25595 3.33463 7.06497L1.2345 5.53914C0.646715 5.11208 0.948796 4.18237 1.67534 4.18237H4.27124C4.59616 4.18237 4.88412 3.97315 4.98453 3.66414L5.78671 1.19529Z" fill="#FEC654"/>
</svg>

================
File: css/styles.css
================
*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

#root, #__next {
  isolation: isolate;
}

h1 {
  font-size: 2.674rem;
  letter-spacing: 0.015rem;
  line-height: 1.48;
  font-weight: 700;
  font-family: "Inter", sans-serif;
}

h2 {
  font-size: 1.125rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 500;
  font-family: "Inter", sans-serif;
}

p {
  font-size: 0.875rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 400;
  font-family: "Inter", sans-serif;
}

span {
  font-size: 0.75rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 400;
  font-family: "Inter", sans-serif;
}

input {
  font-size: 0.875rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 400;
  font-family: "Inter", sans-serif;
}

main {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
}

header {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  background: url(/assets/images/Background_Image.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  height: 40vh;
  color: #fff;
  text-align: center;
}

.header-content {
  margin-bottom: 2rem;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  color: #000;
  height: 500px;
}

.search-section {
  position: absolute;
  bottom: 60%;
  left: 50%;
  transform: translate(-50%, 50%);
  width: 100%;
  max-width: 600px;
  padding: 0 1rem;
}

.search-form {
  display: flex;
  width: 100%;
  background-color: #fff;
  border: 2px solid #D1D5DB;
  border-radius: 0.25rem;
}

.search-input-wrapper {
  display: flex;
  align-items: center;
  flex-grow: 1;
  background-color: #fff;
  border-right: 1px solid #D1D5DB;
}

.search-icon-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.search-icon {
  width: auto;
  height: 100%;
  max-height: 2.98rem;
  filter: grayscale(100%) opacity(0.5);
  border-radius: 0.25rem;
}

.search-input {
  flex-grow: 1;
  border: none;
  padding: 0.75rem 0.5rem;
  font-size: 1rem;
  outline: none;
}
.search-input::placeholder {
  color: #999;
}

.search-button {
  background-color: F9FAFB;
  color: #000;
  border: none;
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  font-family: "Inter", sans-serif;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 400;
}
.search-button:hover {
  background-color: #333;
  color: #fff;
}

section .results {
  margin-top: 3rem;
  padding: 0;
}
section .results .movie-card {
  list-style: none;
  margin-bottom: 1.5rem;
  margin: 0 1rem;
}
section .results .movie-card .movie-card__main-container {
  display: flex;
  gap: 21px;
  width: 100%;
  background-color: #fff;
  padding: 1rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  border-radius: 0.25rem;
}
section .results .movie-card .movie-card__poster-container {
  flex-shrink: 0;
  width: 150px;
  height: 225px;
  overflow: hidden;
}
section .results .movie-card .movie-card__poster-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
section .results .movie-card .movie-card__container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  flex-grow: 1;
}
section .results .movie-card .movie-card__header {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  gap: 8px;
}
section .results .movie-card .movie-card__title {
  font-size: 1.125rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 500;
}
section .results .movie-card .movie-card__rating,
section .results .movie-card .movie-card__info,
section .results .movie-card .movie-card__watchlist {
  font-size: 0.75rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 400;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 6px;
}
section .results .movie-card .movie-card__info-container {
  display: flex;
  flex-direction: column;
  gap: 8px;
}
section .results .movie-card .movie-card__info-container .movie-card__info {
  display: flex;
  flex-direction: row;
  gap: 12px;
}
section .results .movie-card .movie-card__description-text {
  font-size: 0.875rem;
  letter-spacing: 0.05rem;
  line-height: 1.25;
  font-weight: 400;
}
section .results .movie-card .movie-card__description-text .movie-card__read-more {
  background: none;
  border: none;
  cursor: pointer;
  color: #000;
  text-decoration: underline;
  display: inline;
}
section .results .movie-card .movie-card__watchlist-icon {
  width: 1.4rem;
  height: 1.4rem;
  border-radius: 99%;
  cursor: pointer;
}

/*# sourceMappingURL=styles.css.map */

================
File: css/styles.css.map
================
{"version":3,"sourceRoot":"","sources":["../styles.scss"],"names":[],"mappings":"AAEA;EACE;;;AAGF;EACE;;;AAGF;EACE;EACA;;;AAGF;EACE;EACA;;;AAGF;EACE;;;AAGF;EACE;;;AAGF;EACE;;;AAuCF;EAEI;EAAA;EAAA;EAAA;EAEF,aAtCY;;;AAyCd;EAEI;EAAA;EAAA;EAAA;EAEF,aA7CY;;;AAgDd;EAEI;EAAA;EAAA;EAAA;EAEF,aApDY;;;AAuDd;EAEI;EAAA;EAAA;EAAA;EAEF,aA3DY;;;AA8Dd;EAEI;EAAA;EAAA;EAAA;EAEF,aAlEY;;;AAqEd;EACE;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EAEA;;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;EACA,eAlHc;;;AAqHhB;EACE;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;EACF,eAzIgB;;;AA4IhB;EACE;EACA;EACA;EACA;EACA;;AAEA;EACE;;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA,aAhKY;EAiKZ,eA/Jc;EAkKZ;EAAA;EAAA;EAAA;;AAEF;EACE;EACA;;;AAKF;EACE;EACA;;AAEA;EACE;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA,eA3LQ;;AA8LV;EACE;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;;AAIJ;EACE;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;;AAGF;EAEI;EAAA;EAAA;EAAA;;AAIJ;AAAA;AAAA;EAII;EAAA;EAAA;EAAA;EAEF;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;;AAEA;EACE;EACA;EACA;;AAIJ;EAEI;EAAA;EAAA;EAAA;;AAGD;EACC;EACA;EACA;EACA;EACA;EACA;;AAKJ;EACE;EACA;EACA;EACA","file":"styles.css"}

================
File: index.html
================
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
  <!-- CSS -->
  <link rel="stylesheet" href="css/styles.css">
  <!--Firebase-->
  <script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.13.2/firebase-app.js'
    import { getDatabase, ref, set, get, remove } from 'https://www.gstatic.com/firebasejs/10.13.2/firebase-database.js'
    
    window.firebase = { initializeApp, getDatabase, ref, set, get, remove };
  </script>
  <!--JS-->
  <script src="index.js" type="module"></script>
  
  <!--TITLE-->
  <title>Movie Watchlist</title>
</head>
<body>
  <!-- Main -->
  <main>
    <!-- Header -->
    <header>
      <div class="header-content">
        <h1 class="header__title" id="headerTitle">Find your film</h1>
        <span class="header__subtitle" id="headerSubtitle"><a href="watchlist.html">My Watchlist</a></span>
      </div>
    </header>
    <section class="search-section">
      <form class="search-form">
        <div class="search-input-wrapper">
          <div class="search-icon-container">
            <img src="assets/icons/icon-3.svg" alt="Search icon" class="search-icon">
          </div>
          <input type="text" placeholder="Blade Runner" class="search-input" id="searchInput">
        </div>
        <button type="submit" class="search-button">Search</button>
      </form>
    </section>
    
    <!-- Results -->
    <section>
      <ul class="results"></ul>
    </section>
  </main>
</body>
</html>

//NEXT STEPS:
//1. Intergrate the Database 
//2. Show the popular actors in the movies added to the watchlist

================
File: index.js
================
const results = document.querySelector('.results')
const searchInput = document.querySelector('#searchInput')

// Firebase is now available globally
const { initializeApp, getDatabase, ref, set, get, remove } = window.firebase;

const firebaseConfig = {
  apiKey: "AIzaSyA7JAmM79fXeWLVxFQZRB25Rvxs7H_Gw0w",
  authDomain: "movie-watchlist-18757.firebaseapp.com",
  projectId: "movie-watchlist-18757",
  storageBucket: "movie-watchlist-18757.appspot.com",
  messagingSenderId: "805387743764",
  appId: "1:805387743764:web:1d88b6c60f2d5885742d01",
  measurementId: "G-6975S4HSXS",
  databaseURL: "https://movie-watchlist-18757-default-rtdb.asia-southeast1.firebasedatabase.app"
};

const app = initializeApp(firebaseConfig);
const db = getDatabase(app);
// Make sure Firebase is initialized before using it
console.log("Firebase initialized:", app);

//Defining the maximum length of the description
const MAX_LENGTH = 350;

async function fetchData(){
  const searchValue = searchInput.value;
  const response = await fetch(`http://www.omdbapi.com/?apikey=99542785&t=${searchValue}&plot=full`)
  const data = await response.json()
  displayData(data)
}

function displayData(movie){
  // Clear previous results
  results.innerHTML = '';

  if (movie.Response === "False") {
    results.innerHTML = `<p>${movie.Error}</p>`;
    return;
  }

  let movieCard = document.createElement('li')
  movieCard.classList.add('movie-card')

  const truncatedDescription = truncateDescription(movie.Plot || 'N/A', MAX_LENGTH)
  const showReadMore = (movie.Plot || 'N/A').length >= MAX_LENGTH

  movieCard.innerHTML = `
  <div class="movie-card__main-container">
    <div class="movie-card__poster-container">
      <img src="${movie.Poster}" alt="${movie.Title} poster" class="movie-card__poster">
    </div>
    <div class="movie-card__container">
      <div class="movie-card__header">
        <p class="movie-card__title">${movie.Title}</p>
        <div class="movie-card__rating">
          <img src="./assets/icons/icon-star.svg" alt="movie ratings" class="movie-card__rating-icon">
          <span class="movie-card__imdb-rating">${movie.imdbRating || 'N/A'}</span>
        </div>
      </div>
      <div class="movie-card__info-container">
        <div class="movie-card__info">
          <p class="movie-card__runtime">${movie.Runtime || 'N/A'}</p>
          <p class="movie-card__genre">${movie.Genre || 'N/A'}</p>
          <div class="movie-card__watchlist">
            <img src="/assets/icons/icon-1.svg" alt="A button to add the movie to the watchlist" class="movie-card__watchlist-icon" id="buttonAddToWatchList-${movie.imdbID}">
            <span class="buttonAddToWatchList" id="buttonAddToWatchList-${movie.imdbID}">Watchlist</span>
          </div>
        </div>
        <div class="movie-card__description">
          <p class="movie-card__description-text">${truncatedDescription}
          ${showReadMore ? `<button class="movie-card__read-more">Read More</button>` : ''}
          </p>
        </div>
      </div>
    </div>
  </div>
  `
  //Adding event listener to the watchlist button
  const buttonAddToWatchlist = movieCard.querySelector(`#buttonAddToWatchList-${movie.imdbID}`);
  buttonAddToWatchlist.addEventListener('click', () => {
    addToWatchList(movie);
  });
  
  results.appendChild(movieCard)

  //Adding event listener to the read more button
  if(showReadMore){
    const readMoreButton = movieCard.querySelector('.movie-card__read-more');
    readMoreButton.addEventListener('click', () => {
      toggleDescription(readMoreButton, movie.Plot || 'N/A')
    });
  }
}

// Function to truncate the description to the maximum length
function truncateDescription(description, maxLength){
  if(description.length >= maxLength){
    return description.substring(0, maxLength) + "..."
  }
  return description
}

//Function to toggle the read more button
function toggleDescription(button, fullDescription){
  const descriptionElement = button.closest('.movie-card__description').querySelector('.movie-card__description-text');
  if (button.textContent === 'Read More') {
    descriptionElement.textContent = fullDescription;
    button.textContent = 'Show Less';
  } else {
    descriptionElement.textContent = truncateDescription(fullDescription, MAX_LENGTH);
    button.textContent = 'Read More';
  }
}

//Function to add to watchlist
function addToWatchList(movie) {
  const movieRef = ref(db, 'watchlist/' + movie.imdbID);
  set(movieRef, movie)
    .then(() => {
      console.log('Movie added to watchlist successfully');
      // Optionally, you can update the UI here to indicate the movie was added
    })
    .catch((error) => {
      console.error('Error adding movie to watchlist:', error);
    });
}


//Adding event listener to the search form
document.querySelector('.search-form').addEventListener('submit', function(e) {
  e.preventDefault();
  fetchData();
});

================
File: package.json
================
{
  "name": "movie-watchlist",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "firebase": "^10.13.2"
  }
}

================
File: styles.scss
================
// CSS Reset

*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

#root, #__next {
  isolation: isolate;
}

// Variables

$font-family: 'Inter', sans-serif;

$border-radius: 0.25rem;

$Mainheading-style: (
  font-size: 2.674rem,
  letter-spacing: 0.015rem,
  line-height: 1.48,
  font-weight: 700 
);

$Subheading-style: (
  font-size: 1.125rem,
  letter-spacing: 0.05rem,
  line-height: 1.25,
  font-weight: 500 
);

$Body-style: (
  font-size: 0.875rem,
  letter-spacing: 0.05rem,
  line-height: 1.25,
  font-weight: 400 
);

$caption-style: (
  font-size: 0.75rem,
  letter-spacing: 0.05rem,
  line-height: 1.25,
  font-weight: 400 
);

// Custom properties

h1 {
  @each $property, $value in $Mainheading-style {
    #{$property}: #{$value};
  }
  font-family: $font-family;
}

h2 {
  @each $property, $value in $Subheading-style {
    #{$property}: #{$value};
  }
  font-family: $font-family;
}

p {
  @each $property, $value in $Body-style {
    #{$property}: #{$value};
  }
  font-family: $font-family;
}

span {
  @each $property, $value in $caption-style {
    #{$property}: #{$value};
  }
  font-family: $font-family;
}

input {
  @each $property, $value in $Body-style {
    #{$property}: #{$value};
  }
  font-family: $font-family;
}

main {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
}

header {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
 
  background: url(/assets/images/Background_Image.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  height: 40vh;
  color: #fff;
  text-align: center;
}

.header-content {
  margin-bottom: 2rem;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  color: #000;

  height: 500px;
}

.search-section {
  position: absolute;
  bottom: 60%;
  left: 50%;
  transform: translate(-50%, 50%);
  width: 100%;
  max-width: 600px;
  padding: 0 1rem;
}

.search-form {
  display: flex;
  width: 100%;
  background-color: #fff;
  border: 2px solid #D1D5DB;
  border-radius: $border-radius;
}

.search-input-wrapper {
  display: flex;
  align-items: center;
  flex-grow: 1;
  background-color: #fff;
  border-right: 1px solid #D1D5DB;
}

.search-icon-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.search-icon {
  width: auto;
  height: 100%;
  max-height: 2.98rem; 
  filter: grayscale(100%) opacity(0.5);
border-radius: $border-radius;
}

.search-input {
  flex-grow: 1;
  border: none;
  padding: 0.75rem 0.5rem;
  font-size: 1rem;
  outline: none;

  &::placeholder {
    color: #999;
  }
}

.search-button {
  background-color: F9FAFB;
  color: #000;
  border: none;
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  font-family: $font-family;
  border-radius: $border-radius;
  
  @each $property, $value in $Body-style {
    #{$property}: #{$value};
  }
  &:hover {
    background-color: #333;
    color: #fff;
  }
}

section {
  .results {
    margin-top: 3rem;
    padding: 0;

    .movie-card {
      list-style: none;
      margin-bottom: 1.5rem;
      margin: 0 1rem;

      .movie-card__main-container {
        display: flex;
        gap: 21px;
        width: 100%;
        background-color: #fff;
        padding: 1rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        border-radius: $border-radius;
      }

      .movie-card__poster-container {
        flex-shrink: 0;
        width: 150px;
        height: 225px; //Make this responsive later
        overflow: hidden;

        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }

      .movie-card__container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        flex-grow: 1;
      }

      .movie-card__header {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        gap: 8px;
      }

      .movie-card__title {
        @each $property, $value in $Subheading-style {
          #{$property}: #{$value};
        }
      }

      .movie-card__rating,
      .movie-card__info,
      .movie-card__watchlist {
        @each $property, $value in $caption-style {
          #{$property}: #{$value};
        }
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 6px;
      }
       
      .movie-card__info-container {
        display: flex;
        flex-direction: column;
        gap: 8px;

        .movie-card__info {
          display: flex;
          flex-direction: row;
          gap: 12px;
        }
      }

      .movie-card__description-text {
        @each $property, $value in $Body-style {
          #{$property}: #{$value};
        }

         .movie-card__read-more {
          background: none;
          border: none;
          cursor: pointer;
          color: #000;
          text-decoration: underline;
          display: inline;
            //How to make this button in the same line as the text?
         }
      }

      .movie-card__watchlist-icon {
        width: 1.4rem;
        height: 1.4rem;
        border-radius: 99%;
        cursor: pointer;
      }
    }
  }
}

#clear-watchlist {
  background-color: #F9FAFB;
  color: #000;
  border: none;
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  font-family: "Inter", sans-serif;
  border-radius: 0.25rem;
  margin: 1rem;
}

================
File: watchlist.html
================
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
  <!-- CSS -->
  <link rel="stylesheet" href="css/styles.css">
   <!--JS-->
   <script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.13.2/firebase-app.js'
    import { getDatabase, ref, set, get, remove } from 'https://www.gstatic.com/firebasejs/10.13.2/firebase-database.js'
    
    const firebaseConfig = {
      apiKey: "AIzaSyA7JAmM79fXeWLVxFQZRB25Rvxs7H_Gw0w",
      authDomain: "movie-watchlist-18757.firebaseapp.com",
      projectId: "movie-watchlist-18757",
      storageBucket: "movie-watchlist-18757.appspot.com",
      messagingSenderId: "805387743764",
      appId: "1:805387743764:web:1d88b6c60f2d5885742d01",
      measurementId: "G-6975S4HSXS",
      databaseURL: "https://movie-watchlist-18757-default-rtdb.asia-southeast1.firebasedatabase.app"
    };

    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);
    
    window.firebase = { initializeApp, getDatabase, ref, set, get, remove, db };
  </script>
 
  <script src="watchlist.js" type="module"></script>
  <!--TITLE-->
  <title>Movie Watchlist</title>
</head>
<body>
  <!-- Main -->
  <main>
    <!-- Header -->
    <header>
      <div class="header-content">
        <h1 class="header__title" id="headerTitle">My Watchlist</h1>
        <span class="header__subtitle" id="headerSubtitle"><a href="index.html">Find Your Film</a></span>
      </div>
    </header>
    <!-- WATCHLIST -->
    <section class="results-section">
      <button id="clear-watchlist">Clear Watchlist</button>
      <ul class="watchlist results"></ul>
    </section>
  </main>
</body>
</html>

================
File: watchlist.js
================
// Firebase is now available globally
const { initializeApp, getDatabase, ref, set, get, remove } = window.firebase;

const firebaseConfig = {
  apiKey: "AIzaSyA7JAmM79fXeWLVxFQZRB25Rvxs7H_Gw0w",
  authDomain: "movie-watchlist-18757.firebaseapp.com",
  projectId: "movie-watchlist-18757",
  storageBucket: "movie-watchlist-18757.appspot.com",
  messagingSenderId: "805387743764",
  appId: "1:805387743764:web:1d88b6c60f2d5885742d01",
  measurementId: "G-6975S4HSXS",
  databaseURL: "https://movie-watchlist-18757-default-rtdb.asia-southeast1.firebasedatabase.app"
};

const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

// Defining the maximum length of the description
const MAX_LENGTH = 350;

// Function to display the watchlist
function displayWatchList(movie) {
  const movieRef = ref(db, 'watchlist/' + movie.imdbID);
  set(movieRef, movie);
}

// Function to remove the movie from the watchlist
function removeFromWatchlist(movie) {
  const movieRef = ref(db, 'watchlist/' + movie.imdbID);
  remove(movieRef)
    .then(() => {
      console.log('Movie successfully removed from watchlist');
    })
    .catch((error) => {
      console.error('Error removing movie from watchlist:', error);
    });
}

// Function to truncate the description
function truncateDescription(description, maxLength) {
  if (description.length <= maxLength) return description;
  return description.substring(0, maxLength) + "...";
}

// Wait for the DOM to be fully loaded before interacting with elements
document.addEventListener('DOMContentLoaded', () => {
  const clearWatchlistButton = document.getElementById('clear-watchlist');
  const watchlistContainer = document.querySelector('.watchlist');

  if (clearWatchlistButton) {
    clearWatchlistButton.addEventListener('click', () => {
      const watchlistRef = ref(db, 'watchlist');
      remove(watchlistRef).then(() => {
        location.reload();
      });
    });
  }

  // Function to display the watchlist in the DOM
  function loadWatchlist() {
    const watchlistContainer = document.querySelector('.watchlist');
    if (!watchlistContainer) {
      console.error('Watchlist container not found');
      return;
    }
  
    const watchlistRef = ref(db, 'watchlist');
    get(watchlistRef).then((snapshot) => {
      if (snapshot.exists()) {
        const watchlist = snapshot.val();
        
        watchlistContainer.innerHTML = ''; // Clear existing content
        
        Object.values(watchlist).forEach(movie => {
          let movieCard = document.createElement('li');
          movieCard.classList.add('movie-card');

          const truncatedDescription = truncateDescription(movie.Plot || 'N/A', MAX_LENGTH);
          const showReadMore = (movie.Plot || 'N/A').length >= MAX_LENGTH;

          movieCard.innerHTML = `
          <div class="movie-card__main-container">
            <div class="movie-card__poster-container">
              <img src="${movie.Poster}" alt="${movie.Title} poster" class="movie-card__poster">
            </div>
            <div class="movie-card__container">
              <div class="movie-card__header">
                <p class="movie-card__title">${movie.Title}</p>
                <div class="movie-card__rating">
                  <img src="./assets/icons/icon-star.svg" alt="movie ratings" class="movie-card__rating-icon">
                  <span class="movie-card__imdb-rating">${movie.imdbRating || 'N/A'}</span>
                </div>
              </div>
              <div class="movie-card__info-container">
                <div class="movie-card__info">
                  <p class="movie-card__runtime">${movie.Runtime || 'N/A'}</p>
                  <p class="movie-card__genre">${movie.Genre || 'N/A'}</p>
                  <div class="movie-card__watchlist">
                    <img src="/assets/icons/icon-2.svg" alt="A button to remove the movie from the watchlist" class="movie-card__watchlist-icon" id="buttonRemoveFromWatchList-${movie.imdbID}">
                    <span class="buttonRemoveFromWatchList" id="buttonRemoveFromWatchList-${movie.imdbID}">Remove</span>
                  </div>
                </div>
                <div class="movie-card__description">
                  <p class="movie-card__description-text">${truncatedDescription}
                  ${showReadMore ? `<button class="movie-card__read-more">Read More</button>` : ''}
                  </p>
                </div>
              </div>
            </div>
          </div>
          `;

          // Removing the movie from the watchlist when the user clicks the remove button
          const removeButton = movieCard.querySelector(`#buttonRemoveFromWatchList-${movie.imdbID}`);
          removeButton.addEventListener('click', () => {
            removeFromWatchlist(movie);
            movieCard.remove(); 
          });

          watchlistContainer.appendChild(movieCard);
        });

      } else {
        watchlistContainer.innerHTML = '<p>Your watchlist is empty.</p>';
      }

    }).catch((error) => {
      console.error("Error loading watchlist:", error);
      watchlistContainer.innerHTML = '<p>Error loading watchlist. Please try again later.</p>';
    });
  }
  
  loadWatchlist();
});
